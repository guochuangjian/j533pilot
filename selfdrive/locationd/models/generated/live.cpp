#include "live.h"

namespace {
#define DIM 23
#define EDIM 22
#define MEDIM 22
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_3 = 3.8414588206941227;
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_19 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with sympy 1.7.1                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3112248656344267024) {
   out_3112248656344267024[0] = 0;
   out_3112248656344267024[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3112248656344267024[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3112248656344267024[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3112248656344267024[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3112248656344267024[5] = -sin(in_vec[1]);
   out_3112248656344267024[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3112248656344267024[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3112248656344267024[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3112248656344267024[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3112248656344267024[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3112248656344267024[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3112248656344267024[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3112248656344267024[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3112248656344267024[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3112248656344267024[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3112248656344267024[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3112248656344267024[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6514478479377154554) {
   out_6514478479377154554[0] = delta_x[0] + nom_x[0];
   out_6514478479377154554[1] = delta_x[1] + nom_x[1];
   out_6514478479377154554[2] = delta_x[2] + nom_x[2];
   out_6514478479377154554[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6514478479377154554[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6514478479377154554[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6514478479377154554[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6514478479377154554[7] = delta_x[6] + nom_x[7];
   out_6514478479377154554[8] = delta_x[7] + nom_x[8];
   out_6514478479377154554[9] = delta_x[8] + nom_x[9];
   out_6514478479377154554[10] = delta_x[9] + nom_x[10];
   out_6514478479377154554[11] = delta_x[10] + nom_x[11];
   out_6514478479377154554[12] = delta_x[11] + nom_x[12];
   out_6514478479377154554[13] = delta_x[12] + nom_x[13];
   out_6514478479377154554[14] = delta_x[13] + nom_x[14];
   out_6514478479377154554[15] = delta_x[14] + nom_x[15];
   out_6514478479377154554[16] = delta_x[15] + nom_x[16];
   out_6514478479377154554[17] = delta_x[16] + nom_x[17];
   out_6514478479377154554[18] = delta_x[17] + nom_x[18];
   out_6514478479377154554[19] = delta_x[18] + nom_x[19];
   out_6514478479377154554[20] = delta_x[19] + nom_x[20];
   out_6514478479377154554[21] = delta_x[20] + nom_x[21];
   out_6514478479377154554[22] = delta_x[21] + nom_x[22];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6562831803697931829) {
   out_6562831803697931829[0] = -nom_x[0] + true_x[0];
   out_6562831803697931829[1] = -nom_x[1] + true_x[1];
   out_6562831803697931829[2] = -nom_x[2] + true_x[2];
   out_6562831803697931829[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6562831803697931829[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6562831803697931829[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6562831803697931829[6] = -nom_x[7] + true_x[7];
   out_6562831803697931829[7] = -nom_x[8] + true_x[8];
   out_6562831803697931829[8] = -nom_x[9] + true_x[9];
   out_6562831803697931829[9] = -nom_x[10] + true_x[10];
   out_6562831803697931829[10] = -nom_x[11] + true_x[11];
   out_6562831803697931829[11] = -nom_x[12] + true_x[12];
   out_6562831803697931829[12] = -nom_x[13] + true_x[13];
   out_6562831803697931829[13] = -nom_x[14] + true_x[14];
   out_6562831803697931829[14] = -nom_x[15] + true_x[15];
   out_6562831803697931829[15] = -nom_x[16] + true_x[16];
   out_6562831803697931829[16] = -nom_x[17] + true_x[17];
   out_6562831803697931829[17] = -nom_x[18] + true_x[18];
   out_6562831803697931829[18] = -nom_x[19] + true_x[19];
   out_6562831803697931829[19] = -nom_x[20] + true_x[20];
   out_6562831803697931829[20] = -nom_x[21] + true_x[21];
   out_6562831803697931829[21] = -nom_x[22] + true_x[22];
}
void H_mod_fun(double *state, double *out_3485285672998159801) {
   out_3485285672998159801[0] = 1.0;
   out_3485285672998159801[1] = 0.0;
   out_3485285672998159801[2] = 0.0;
   out_3485285672998159801[3] = 0.0;
   out_3485285672998159801[4] = 0.0;
   out_3485285672998159801[5] = 0.0;
   out_3485285672998159801[6] = 0.0;
   out_3485285672998159801[7] = 0.0;
   out_3485285672998159801[8] = 0.0;
   out_3485285672998159801[9] = 0.0;
   out_3485285672998159801[10] = 0.0;
   out_3485285672998159801[11] = 0.0;
   out_3485285672998159801[12] = 0.0;
   out_3485285672998159801[13] = 0.0;
   out_3485285672998159801[14] = 0.0;
   out_3485285672998159801[15] = 0.0;
   out_3485285672998159801[16] = 0.0;
   out_3485285672998159801[17] = 0.0;
   out_3485285672998159801[18] = 0.0;
   out_3485285672998159801[19] = 0.0;
   out_3485285672998159801[20] = 0.0;
   out_3485285672998159801[21] = 0.0;
   out_3485285672998159801[22] = 0.0;
   out_3485285672998159801[23] = 1.0;
   out_3485285672998159801[24] = 0.0;
   out_3485285672998159801[25] = 0.0;
   out_3485285672998159801[26] = 0.0;
   out_3485285672998159801[27] = 0.0;
   out_3485285672998159801[28] = 0.0;
   out_3485285672998159801[29] = 0.0;
   out_3485285672998159801[30] = 0.0;
   out_3485285672998159801[31] = 0.0;
   out_3485285672998159801[32] = 0.0;
   out_3485285672998159801[33] = 0.0;
   out_3485285672998159801[34] = 0.0;
   out_3485285672998159801[35] = 0.0;
   out_3485285672998159801[36] = 0.0;
   out_3485285672998159801[37] = 0.0;
   out_3485285672998159801[38] = 0.0;
   out_3485285672998159801[39] = 0.0;
   out_3485285672998159801[40] = 0.0;
   out_3485285672998159801[41] = 0.0;
   out_3485285672998159801[42] = 0.0;
   out_3485285672998159801[43] = 0.0;
   out_3485285672998159801[44] = 0.0;
   out_3485285672998159801[45] = 0.0;
   out_3485285672998159801[46] = 1.0;
   out_3485285672998159801[47] = 0.0;
   out_3485285672998159801[48] = 0.0;
   out_3485285672998159801[49] = 0.0;
   out_3485285672998159801[50] = 0.0;
   out_3485285672998159801[51] = 0.0;
   out_3485285672998159801[52] = 0.0;
   out_3485285672998159801[53] = 0.0;
   out_3485285672998159801[54] = 0.0;
   out_3485285672998159801[55] = 0.0;
   out_3485285672998159801[56] = 0.0;
   out_3485285672998159801[57] = 0.0;
   out_3485285672998159801[58] = 0.0;
   out_3485285672998159801[59] = 0.0;
   out_3485285672998159801[60] = 0.0;
   out_3485285672998159801[61] = 0.0;
   out_3485285672998159801[62] = 0.0;
   out_3485285672998159801[63] = 0.0;
   out_3485285672998159801[64] = 0.0;
   out_3485285672998159801[65] = 0.0;
   out_3485285672998159801[66] = 0.0;
   out_3485285672998159801[67] = 0.0;
   out_3485285672998159801[68] = 0.0;
   out_3485285672998159801[69] = -0.5*state[4];
   out_3485285672998159801[70] = -0.5*state[5];
   out_3485285672998159801[71] = -0.5*state[6];
   out_3485285672998159801[72] = 0.0;
   out_3485285672998159801[73] = 0.0;
   out_3485285672998159801[74] = 0.0;
   out_3485285672998159801[75] = 0.0;
   out_3485285672998159801[76] = 0.0;
   out_3485285672998159801[77] = 0.0;
   out_3485285672998159801[78] = 0.0;
   out_3485285672998159801[79] = 0.0;
   out_3485285672998159801[80] = 0.0;
   out_3485285672998159801[81] = 0.0;
   out_3485285672998159801[82] = 0.0;
   out_3485285672998159801[83] = 0.0;
   out_3485285672998159801[84] = 0.0;
   out_3485285672998159801[85] = 0.0;
   out_3485285672998159801[86] = 0.0;
   out_3485285672998159801[87] = 0.0;
   out_3485285672998159801[88] = 0.0;
   out_3485285672998159801[89] = 0.0;
   out_3485285672998159801[90] = 0.0;
   out_3485285672998159801[91] = 0.5*state[3];
   out_3485285672998159801[92] = 0.5*state[6];
   out_3485285672998159801[93] = -0.5*state[5];
   out_3485285672998159801[94] = 0.0;
   out_3485285672998159801[95] = 0.0;
   out_3485285672998159801[96] = 0.0;
   out_3485285672998159801[97] = 0.0;
   out_3485285672998159801[98] = 0.0;
   out_3485285672998159801[99] = 0.0;
   out_3485285672998159801[100] = 0.0;
   out_3485285672998159801[101] = 0.0;
   out_3485285672998159801[102] = 0.0;
   out_3485285672998159801[103] = 0.0;
   out_3485285672998159801[104] = 0.0;
   out_3485285672998159801[105] = 0.0;
   out_3485285672998159801[106] = 0.0;
   out_3485285672998159801[107] = 0.0;
   out_3485285672998159801[108] = 0.0;
   out_3485285672998159801[109] = 0.0;
   out_3485285672998159801[110] = 0.0;
   out_3485285672998159801[111] = 0.0;
   out_3485285672998159801[112] = 0.0;
   out_3485285672998159801[113] = -0.5*state[6];
   out_3485285672998159801[114] = 0.5*state[3];
   out_3485285672998159801[115] = 0.5*state[4];
   out_3485285672998159801[116] = 0.0;
   out_3485285672998159801[117] = 0.0;
   out_3485285672998159801[118] = 0.0;
   out_3485285672998159801[119] = 0.0;
   out_3485285672998159801[120] = 0.0;
   out_3485285672998159801[121] = 0.0;
   out_3485285672998159801[122] = 0.0;
   out_3485285672998159801[123] = 0.0;
   out_3485285672998159801[124] = 0.0;
   out_3485285672998159801[125] = 0.0;
   out_3485285672998159801[126] = 0.0;
   out_3485285672998159801[127] = 0.0;
   out_3485285672998159801[128] = 0.0;
   out_3485285672998159801[129] = 0.0;
   out_3485285672998159801[130] = 0.0;
   out_3485285672998159801[131] = 0.0;
   out_3485285672998159801[132] = 0.0;
   out_3485285672998159801[133] = 0.0;
   out_3485285672998159801[134] = 0.0;
   out_3485285672998159801[135] = 0.5*state[5];
   out_3485285672998159801[136] = -0.5*state[4];
   out_3485285672998159801[137] = 0.5*state[3];
   out_3485285672998159801[138] = 0.0;
   out_3485285672998159801[139] = 0.0;
   out_3485285672998159801[140] = 0.0;
   out_3485285672998159801[141] = 0.0;
   out_3485285672998159801[142] = 0.0;
   out_3485285672998159801[143] = 0.0;
   out_3485285672998159801[144] = 0.0;
   out_3485285672998159801[145] = 0.0;
   out_3485285672998159801[146] = 0.0;
   out_3485285672998159801[147] = 0.0;
   out_3485285672998159801[148] = 0.0;
   out_3485285672998159801[149] = 0.0;
   out_3485285672998159801[150] = 0.0;
   out_3485285672998159801[151] = 0.0;
   out_3485285672998159801[152] = 0.0;
   out_3485285672998159801[153] = 0.0;
   out_3485285672998159801[154] = 0.0;
   out_3485285672998159801[155] = 0.0;
   out_3485285672998159801[156] = 0.0;
   out_3485285672998159801[157] = 0.0;
   out_3485285672998159801[158] = 0.0;
   out_3485285672998159801[159] = 0.0;
   out_3485285672998159801[160] = 1.0;
   out_3485285672998159801[161] = 0.0;
   out_3485285672998159801[162] = 0.0;
   out_3485285672998159801[163] = 0.0;
   out_3485285672998159801[164] = 0.0;
   out_3485285672998159801[165] = 0.0;
   out_3485285672998159801[166] = 0.0;
   out_3485285672998159801[167] = 0.0;
   out_3485285672998159801[168] = 0.0;
   out_3485285672998159801[169] = 0.0;
   out_3485285672998159801[170] = 0.0;
   out_3485285672998159801[171] = 0.0;
   out_3485285672998159801[172] = 0.0;
   out_3485285672998159801[173] = 0.0;
   out_3485285672998159801[174] = 0.0;
   out_3485285672998159801[175] = 0.0;
   out_3485285672998159801[176] = 0.0;
   out_3485285672998159801[177] = 0.0;
   out_3485285672998159801[178] = 0.0;
   out_3485285672998159801[179] = 0.0;
   out_3485285672998159801[180] = 0.0;
   out_3485285672998159801[181] = 0.0;
   out_3485285672998159801[182] = 0.0;
   out_3485285672998159801[183] = 1.0;
   out_3485285672998159801[184] = 0.0;
   out_3485285672998159801[185] = 0.0;
   out_3485285672998159801[186] = 0.0;
   out_3485285672998159801[187] = 0.0;
   out_3485285672998159801[188] = 0.0;
   out_3485285672998159801[189] = 0.0;
   out_3485285672998159801[190] = 0.0;
   out_3485285672998159801[191] = 0.0;
   out_3485285672998159801[192] = 0.0;
   out_3485285672998159801[193] = 0.0;
   out_3485285672998159801[194] = 0.0;
   out_3485285672998159801[195] = 0.0;
   out_3485285672998159801[196] = 0.0;
   out_3485285672998159801[197] = 0.0;
   out_3485285672998159801[198] = 0.0;
   out_3485285672998159801[199] = 0.0;
   out_3485285672998159801[200] = 0.0;
   out_3485285672998159801[201] = 0.0;
   out_3485285672998159801[202] = 0.0;
   out_3485285672998159801[203] = 0.0;
   out_3485285672998159801[204] = 0.0;
   out_3485285672998159801[205] = 0.0;
   out_3485285672998159801[206] = 1.0;
   out_3485285672998159801[207] = 0.0;
   out_3485285672998159801[208] = 0.0;
   out_3485285672998159801[209] = 0.0;
   out_3485285672998159801[210] = 0.0;
   out_3485285672998159801[211] = 0.0;
   out_3485285672998159801[212] = 0.0;
   out_3485285672998159801[213] = 0.0;
   out_3485285672998159801[214] = 0.0;
   out_3485285672998159801[215] = 0.0;
   out_3485285672998159801[216] = 0.0;
   out_3485285672998159801[217] = 0.0;
   out_3485285672998159801[218] = 0.0;
   out_3485285672998159801[219] = 0.0;
   out_3485285672998159801[220] = 0.0;
   out_3485285672998159801[221] = 0.0;
   out_3485285672998159801[222] = 0.0;
   out_3485285672998159801[223] = 0.0;
   out_3485285672998159801[224] = 0.0;
   out_3485285672998159801[225] = 0.0;
   out_3485285672998159801[226] = 0.0;
   out_3485285672998159801[227] = 0.0;
   out_3485285672998159801[228] = 0.0;
   out_3485285672998159801[229] = 1.0;
   out_3485285672998159801[230] = 0.0;
   out_3485285672998159801[231] = 0.0;
   out_3485285672998159801[232] = 0.0;
   out_3485285672998159801[233] = 0.0;
   out_3485285672998159801[234] = 0.0;
   out_3485285672998159801[235] = 0.0;
   out_3485285672998159801[236] = 0.0;
   out_3485285672998159801[237] = 0.0;
   out_3485285672998159801[238] = 0.0;
   out_3485285672998159801[239] = 0.0;
   out_3485285672998159801[240] = 0.0;
   out_3485285672998159801[241] = 0.0;
   out_3485285672998159801[242] = 0.0;
   out_3485285672998159801[243] = 0.0;
   out_3485285672998159801[244] = 0.0;
   out_3485285672998159801[245] = 0.0;
   out_3485285672998159801[246] = 0.0;
   out_3485285672998159801[247] = 0.0;
   out_3485285672998159801[248] = 0.0;
   out_3485285672998159801[249] = 0.0;
   out_3485285672998159801[250] = 0.0;
   out_3485285672998159801[251] = 0.0;
   out_3485285672998159801[252] = 1.0;
   out_3485285672998159801[253] = 0.0;
   out_3485285672998159801[254] = 0.0;
   out_3485285672998159801[255] = 0.0;
   out_3485285672998159801[256] = 0.0;
   out_3485285672998159801[257] = 0.0;
   out_3485285672998159801[258] = 0.0;
   out_3485285672998159801[259] = 0.0;
   out_3485285672998159801[260] = 0.0;
   out_3485285672998159801[261] = 0.0;
   out_3485285672998159801[262] = 0.0;
   out_3485285672998159801[263] = 0.0;
   out_3485285672998159801[264] = 0.0;
   out_3485285672998159801[265] = 0.0;
   out_3485285672998159801[266] = 0.0;
   out_3485285672998159801[267] = 0.0;
   out_3485285672998159801[268] = 0.0;
   out_3485285672998159801[269] = 0.0;
   out_3485285672998159801[270] = 0.0;
   out_3485285672998159801[271] = 0.0;
   out_3485285672998159801[272] = 0.0;
   out_3485285672998159801[273] = 0.0;
   out_3485285672998159801[274] = 0.0;
   out_3485285672998159801[275] = 1.0;
   out_3485285672998159801[276] = 0.0;
   out_3485285672998159801[277] = 0.0;
   out_3485285672998159801[278] = 0.0;
   out_3485285672998159801[279] = 0.0;
   out_3485285672998159801[280] = 0.0;
   out_3485285672998159801[281] = 0.0;
   out_3485285672998159801[282] = 0.0;
   out_3485285672998159801[283] = 0.0;
   out_3485285672998159801[284] = 0.0;
   out_3485285672998159801[285] = 0.0;
   out_3485285672998159801[286] = 0.0;
   out_3485285672998159801[287] = 0.0;
   out_3485285672998159801[288] = 0.0;
   out_3485285672998159801[289] = 0.0;
   out_3485285672998159801[290] = 0.0;
   out_3485285672998159801[291] = 0.0;
   out_3485285672998159801[292] = 0.0;
   out_3485285672998159801[293] = 0.0;
   out_3485285672998159801[294] = 0.0;
   out_3485285672998159801[295] = 0.0;
   out_3485285672998159801[296] = 0.0;
   out_3485285672998159801[297] = 0.0;
   out_3485285672998159801[298] = 1.0;
   out_3485285672998159801[299] = 0.0;
   out_3485285672998159801[300] = 0.0;
   out_3485285672998159801[301] = 0.0;
   out_3485285672998159801[302] = 0.0;
   out_3485285672998159801[303] = 0.0;
   out_3485285672998159801[304] = 0.0;
   out_3485285672998159801[305] = 0.0;
   out_3485285672998159801[306] = 0.0;
   out_3485285672998159801[307] = 0.0;
   out_3485285672998159801[308] = 0.0;
   out_3485285672998159801[309] = 0.0;
   out_3485285672998159801[310] = 0.0;
   out_3485285672998159801[311] = 0.0;
   out_3485285672998159801[312] = 0.0;
   out_3485285672998159801[313] = 0.0;
   out_3485285672998159801[314] = 0.0;
   out_3485285672998159801[315] = 0.0;
   out_3485285672998159801[316] = 0.0;
   out_3485285672998159801[317] = 0.0;
   out_3485285672998159801[318] = 0.0;
   out_3485285672998159801[319] = 0.0;
   out_3485285672998159801[320] = 0.0;
   out_3485285672998159801[321] = 1.0;
   out_3485285672998159801[322] = 0.0;
   out_3485285672998159801[323] = 0.0;
   out_3485285672998159801[324] = 0.0;
   out_3485285672998159801[325] = 0.0;
   out_3485285672998159801[326] = 0.0;
   out_3485285672998159801[327] = 0.0;
   out_3485285672998159801[328] = 0.0;
   out_3485285672998159801[329] = 0.0;
   out_3485285672998159801[330] = 0.0;
   out_3485285672998159801[331] = 0.0;
   out_3485285672998159801[332] = 0.0;
   out_3485285672998159801[333] = 0.0;
   out_3485285672998159801[334] = 0.0;
   out_3485285672998159801[335] = 0.0;
   out_3485285672998159801[336] = 0.0;
   out_3485285672998159801[337] = 0.0;
   out_3485285672998159801[338] = 0.0;
   out_3485285672998159801[339] = 0.0;
   out_3485285672998159801[340] = 0.0;
   out_3485285672998159801[341] = 0.0;
   out_3485285672998159801[342] = 0.0;
   out_3485285672998159801[343] = 0.0;
   out_3485285672998159801[344] = 1.0;
   out_3485285672998159801[345] = 0.0;
   out_3485285672998159801[346] = 0.0;
   out_3485285672998159801[347] = 0.0;
   out_3485285672998159801[348] = 0.0;
   out_3485285672998159801[349] = 0.0;
   out_3485285672998159801[350] = 0.0;
   out_3485285672998159801[351] = 0.0;
   out_3485285672998159801[352] = 0.0;
   out_3485285672998159801[353] = 0.0;
   out_3485285672998159801[354] = 0.0;
   out_3485285672998159801[355] = 0.0;
   out_3485285672998159801[356] = 0.0;
   out_3485285672998159801[357] = 0.0;
   out_3485285672998159801[358] = 0.0;
   out_3485285672998159801[359] = 0.0;
   out_3485285672998159801[360] = 0.0;
   out_3485285672998159801[361] = 0.0;
   out_3485285672998159801[362] = 0.0;
   out_3485285672998159801[363] = 0.0;
   out_3485285672998159801[364] = 0.0;
   out_3485285672998159801[365] = 0.0;
   out_3485285672998159801[366] = 0.0;
   out_3485285672998159801[367] = 1.0;
   out_3485285672998159801[368] = 0.0;
   out_3485285672998159801[369] = 0.0;
   out_3485285672998159801[370] = 0.0;
   out_3485285672998159801[371] = 0.0;
   out_3485285672998159801[372] = 0.0;
   out_3485285672998159801[373] = 0.0;
   out_3485285672998159801[374] = 0.0;
   out_3485285672998159801[375] = 0.0;
   out_3485285672998159801[376] = 0.0;
   out_3485285672998159801[377] = 0.0;
   out_3485285672998159801[378] = 0.0;
   out_3485285672998159801[379] = 0.0;
   out_3485285672998159801[380] = 0.0;
   out_3485285672998159801[381] = 0.0;
   out_3485285672998159801[382] = 0.0;
   out_3485285672998159801[383] = 0.0;
   out_3485285672998159801[384] = 0.0;
   out_3485285672998159801[385] = 0.0;
   out_3485285672998159801[386] = 0.0;
   out_3485285672998159801[387] = 0.0;
   out_3485285672998159801[388] = 0.0;
   out_3485285672998159801[389] = 0.0;
   out_3485285672998159801[390] = 1.0;
   out_3485285672998159801[391] = 0.0;
   out_3485285672998159801[392] = 0.0;
   out_3485285672998159801[393] = 0.0;
   out_3485285672998159801[394] = 0.0;
   out_3485285672998159801[395] = 0.0;
   out_3485285672998159801[396] = 0.0;
   out_3485285672998159801[397] = 0.0;
   out_3485285672998159801[398] = 0.0;
   out_3485285672998159801[399] = 0.0;
   out_3485285672998159801[400] = 0.0;
   out_3485285672998159801[401] = 0.0;
   out_3485285672998159801[402] = 0.0;
   out_3485285672998159801[403] = 0.0;
   out_3485285672998159801[404] = 0.0;
   out_3485285672998159801[405] = 0.0;
   out_3485285672998159801[406] = 0.0;
   out_3485285672998159801[407] = 0.0;
   out_3485285672998159801[408] = 0.0;
   out_3485285672998159801[409] = 0.0;
   out_3485285672998159801[410] = 0.0;
   out_3485285672998159801[411] = 0.0;
   out_3485285672998159801[412] = 0.0;
   out_3485285672998159801[413] = 1.0;
   out_3485285672998159801[414] = 0.0;
   out_3485285672998159801[415] = 0.0;
   out_3485285672998159801[416] = 0.0;
   out_3485285672998159801[417] = 0.0;
   out_3485285672998159801[418] = 0.0;
   out_3485285672998159801[419] = 0.0;
   out_3485285672998159801[420] = 0.0;
   out_3485285672998159801[421] = 0.0;
   out_3485285672998159801[422] = 0.0;
   out_3485285672998159801[423] = 0.0;
   out_3485285672998159801[424] = 0.0;
   out_3485285672998159801[425] = 0.0;
   out_3485285672998159801[426] = 0.0;
   out_3485285672998159801[427] = 0.0;
   out_3485285672998159801[428] = 0.0;
   out_3485285672998159801[429] = 0.0;
   out_3485285672998159801[430] = 0.0;
   out_3485285672998159801[431] = 0.0;
   out_3485285672998159801[432] = 0.0;
   out_3485285672998159801[433] = 0.0;
   out_3485285672998159801[434] = 0.0;
   out_3485285672998159801[435] = 0.0;
   out_3485285672998159801[436] = 1.0;
   out_3485285672998159801[437] = 0.0;
   out_3485285672998159801[438] = 0.0;
   out_3485285672998159801[439] = 0.0;
   out_3485285672998159801[440] = 0.0;
   out_3485285672998159801[441] = 0.0;
   out_3485285672998159801[442] = 0.0;
   out_3485285672998159801[443] = 0.0;
   out_3485285672998159801[444] = 0.0;
   out_3485285672998159801[445] = 0.0;
   out_3485285672998159801[446] = 0.0;
   out_3485285672998159801[447] = 0.0;
   out_3485285672998159801[448] = 0.0;
   out_3485285672998159801[449] = 0.0;
   out_3485285672998159801[450] = 0.0;
   out_3485285672998159801[451] = 0.0;
   out_3485285672998159801[452] = 0.0;
   out_3485285672998159801[453] = 0.0;
   out_3485285672998159801[454] = 0.0;
   out_3485285672998159801[455] = 0.0;
   out_3485285672998159801[456] = 0.0;
   out_3485285672998159801[457] = 0.0;
   out_3485285672998159801[458] = 0.0;
   out_3485285672998159801[459] = 1.0;
   out_3485285672998159801[460] = 0.0;
   out_3485285672998159801[461] = 0.0;
   out_3485285672998159801[462] = 0.0;
   out_3485285672998159801[463] = 0.0;
   out_3485285672998159801[464] = 0.0;
   out_3485285672998159801[465] = 0.0;
   out_3485285672998159801[466] = 0.0;
   out_3485285672998159801[467] = 0.0;
   out_3485285672998159801[468] = 0.0;
   out_3485285672998159801[469] = 0.0;
   out_3485285672998159801[470] = 0.0;
   out_3485285672998159801[471] = 0.0;
   out_3485285672998159801[472] = 0.0;
   out_3485285672998159801[473] = 0.0;
   out_3485285672998159801[474] = 0.0;
   out_3485285672998159801[475] = 0.0;
   out_3485285672998159801[476] = 0.0;
   out_3485285672998159801[477] = 0.0;
   out_3485285672998159801[478] = 0.0;
   out_3485285672998159801[479] = 0.0;
   out_3485285672998159801[480] = 0.0;
   out_3485285672998159801[481] = 0.0;
   out_3485285672998159801[482] = 1.0;
   out_3485285672998159801[483] = 0.0;
   out_3485285672998159801[484] = 0.0;
   out_3485285672998159801[485] = 0.0;
   out_3485285672998159801[486] = 0.0;
   out_3485285672998159801[487] = 0.0;
   out_3485285672998159801[488] = 0.0;
   out_3485285672998159801[489] = 0.0;
   out_3485285672998159801[490] = 0.0;
   out_3485285672998159801[491] = 0.0;
   out_3485285672998159801[492] = 0.0;
   out_3485285672998159801[493] = 0.0;
   out_3485285672998159801[494] = 0.0;
   out_3485285672998159801[495] = 0.0;
   out_3485285672998159801[496] = 0.0;
   out_3485285672998159801[497] = 0.0;
   out_3485285672998159801[498] = 0.0;
   out_3485285672998159801[499] = 0.0;
   out_3485285672998159801[500] = 0.0;
   out_3485285672998159801[501] = 0.0;
   out_3485285672998159801[502] = 0.0;
   out_3485285672998159801[503] = 0.0;
   out_3485285672998159801[504] = 0.0;
   out_3485285672998159801[505] = 1.0;
}
void f_fun(double *state, double dt, double *out_2252742358831627050) {
   out_2252742358831627050[0] = dt*state[7] + state[0];
   out_2252742358831627050[1] = dt*state[8] + state[1];
   out_2252742358831627050[2] = dt*state[9] + state[2];
   out_2252742358831627050[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2252742358831627050[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2252742358831627050[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2252742358831627050[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2252742358831627050[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[7];
   out_2252742358831627050[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]) + state[8];
   out_2252742358831627050[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]) + state[9];
   out_2252742358831627050[10] = state[10];
   out_2252742358831627050[11] = state[11];
   out_2252742358831627050[12] = state[12];
   out_2252742358831627050[13] = state[13];
   out_2252742358831627050[14] = state[14];
   out_2252742358831627050[15] = state[15];
   out_2252742358831627050[16] = state[16];
   out_2252742358831627050[17] = state[17];
   out_2252742358831627050[18] = state[18];
   out_2252742358831627050[19] = state[19];
   out_2252742358831627050[20] = state[20];
   out_2252742358831627050[21] = state[21];
   out_2252742358831627050[22] = state[22];
}
void F_fun(double *state, double dt, double *out_1390635145567685639) {
   out_1390635145567685639[0] = 1;
   out_1390635145567685639[1] = 0;
   out_1390635145567685639[2] = 0;
   out_1390635145567685639[3] = 0;
   out_1390635145567685639[4] = 0;
   out_1390635145567685639[5] = 0;
   out_1390635145567685639[6] = dt;
   out_1390635145567685639[7] = 0;
   out_1390635145567685639[8] = 0;
   out_1390635145567685639[9] = 0;
   out_1390635145567685639[10] = 0;
   out_1390635145567685639[11] = 0;
   out_1390635145567685639[12] = 0;
   out_1390635145567685639[13] = 0;
   out_1390635145567685639[14] = 0;
   out_1390635145567685639[15] = 0;
   out_1390635145567685639[16] = 0;
   out_1390635145567685639[17] = 0;
   out_1390635145567685639[18] = 0;
   out_1390635145567685639[19] = 0;
   out_1390635145567685639[20] = 0;
   out_1390635145567685639[21] = 0;
   out_1390635145567685639[22] = 0;
   out_1390635145567685639[23] = 1;
   out_1390635145567685639[24] = 0;
   out_1390635145567685639[25] = 0;
   out_1390635145567685639[26] = 0;
   out_1390635145567685639[27] = 0;
   out_1390635145567685639[28] = 0;
   out_1390635145567685639[29] = dt;
   out_1390635145567685639[30] = 0;
   out_1390635145567685639[31] = 0;
   out_1390635145567685639[32] = 0;
   out_1390635145567685639[33] = 0;
   out_1390635145567685639[34] = 0;
   out_1390635145567685639[35] = 0;
   out_1390635145567685639[36] = 0;
   out_1390635145567685639[37] = 0;
   out_1390635145567685639[38] = 0;
   out_1390635145567685639[39] = 0;
   out_1390635145567685639[40] = 0;
   out_1390635145567685639[41] = 0;
   out_1390635145567685639[42] = 0;
   out_1390635145567685639[43] = 0;
   out_1390635145567685639[44] = 0;
   out_1390635145567685639[45] = 0;
   out_1390635145567685639[46] = 1;
   out_1390635145567685639[47] = 0;
   out_1390635145567685639[48] = 0;
   out_1390635145567685639[49] = 0;
   out_1390635145567685639[50] = 0;
   out_1390635145567685639[51] = 0;
   out_1390635145567685639[52] = dt;
   out_1390635145567685639[53] = 0;
   out_1390635145567685639[54] = 0;
   out_1390635145567685639[55] = 0;
   out_1390635145567685639[56] = 0;
   out_1390635145567685639[57] = 0;
   out_1390635145567685639[58] = 0;
   out_1390635145567685639[59] = 0;
   out_1390635145567685639[60] = 0;
   out_1390635145567685639[61] = 0;
   out_1390635145567685639[62] = 0;
   out_1390635145567685639[63] = 0;
   out_1390635145567685639[64] = 0;
   out_1390635145567685639[65] = 0;
   out_1390635145567685639[66] = 0;
   out_1390635145567685639[67] = 0;
   out_1390635145567685639[68] = 0;
   out_1390635145567685639[69] = 1;
   out_1390635145567685639[70] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1390635145567685639[71] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1390635145567685639[72] = 0;
   out_1390635145567685639[73] = 0;
   out_1390635145567685639[74] = 0;
   out_1390635145567685639[75] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1390635145567685639[76] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1390635145567685639[77] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1390635145567685639[78] = 0;
   out_1390635145567685639[79] = 0;
   out_1390635145567685639[80] = 0;
   out_1390635145567685639[81] = 0;
   out_1390635145567685639[82] = 0;
   out_1390635145567685639[83] = 0;
   out_1390635145567685639[84] = 0;
   out_1390635145567685639[85] = 0;
   out_1390635145567685639[86] = 0;
   out_1390635145567685639[87] = 0;
   out_1390635145567685639[88] = 0;
   out_1390635145567685639[89] = 0;
   out_1390635145567685639[90] = 0;
   out_1390635145567685639[91] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1390635145567685639[92] = 1;
   out_1390635145567685639[93] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1390635145567685639[94] = 0;
   out_1390635145567685639[95] = 0;
   out_1390635145567685639[96] = 0;
   out_1390635145567685639[97] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1390635145567685639[98] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1390635145567685639[99] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1390635145567685639[100] = 0;
   out_1390635145567685639[101] = 0;
   out_1390635145567685639[102] = 0;
   out_1390635145567685639[103] = 0;
   out_1390635145567685639[104] = 0;
   out_1390635145567685639[105] = 0;
   out_1390635145567685639[106] = 0;
   out_1390635145567685639[107] = 0;
   out_1390635145567685639[108] = 0;
   out_1390635145567685639[109] = 0;
   out_1390635145567685639[110] = 0;
   out_1390635145567685639[111] = 0;
   out_1390635145567685639[112] = 0;
   out_1390635145567685639[113] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1390635145567685639[114] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1390635145567685639[115] = 1;
   out_1390635145567685639[116] = 0;
   out_1390635145567685639[117] = 0;
   out_1390635145567685639[118] = 0;
   out_1390635145567685639[119] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1390635145567685639[120] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1390635145567685639[121] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1390635145567685639[122] = 0;
   out_1390635145567685639[123] = 0;
   out_1390635145567685639[124] = 0;
   out_1390635145567685639[125] = 0;
   out_1390635145567685639[126] = 0;
   out_1390635145567685639[127] = 0;
   out_1390635145567685639[128] = 0;
   out_1390635145567685639[129] = 0;
   out_1390635145567685639[130] = 0;
   out_1390635145567685639[131] = 0;
   out_1390635145567685639[132] = 0;
   out_1390635145567685639[133] = 0;
   out_1390635145567685639[134] = 0;
   out_1390635145567685639[135] = 0;
   out_1390635145567685639[136] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_1390635145567685639[137] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[19] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1390635145567685639[138] = 1;
   out_1390635145567685639[139] = 0;
   out_1390635145567685639[140] = 0;
   out_1390635145567685639[141] = 0;
   out_1390635145567685639[142] = 0;
   out_1390635145567685639[143] = 0;
   out_1390635145567685639[144] = 0;
   out_1390635145567685639[145] = 0;
   out_1390635145567685639[146] = 0;
   out_1390635145567685639[147] = 0;
   out_1390635145567685639[148] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1390635145567685639[149] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1390635145567685639[150] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1390635145567685639[151] = 0;
   out_1390635145567685639[152] = 0;
   out_1390635145567685639[153] = 0;
   out_1390635145567685639[154] = 0;
   out_1390635145567685639[155] = 0;
   out_1390635145567685639[156] = 0;
   out_1390635145567685639[157] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[18] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_1390635145567685639[158] = 0;
   out_1390635145567685639[159] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1390635145567685639[160] = 0;
   out_1390635145567685639[161] = 1;
   out_1390635145567685639[162] = 0;
   out_1390635145567685639[163] = 0;
   out_1390635145567685639[164] = 0;
   out_1390635145567685639[165] = 0;
   out_1390635145567685639[166] = 0;
   out_1390635145567685639[167] = 0;
   out_1390635145567685639[168] = 0;
   out_1390635145567685639[169] = 0;
   out_1390635145567685639[170] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1390635145567685639[171] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1390635145567685639[172] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1390635145567685639[173] = 0;
   out_1390635145567685639[174] = 0;
   out_1390635145567685639[175] = 0;
   out_1390635145567685639[176] = 0;
   out_1390635145567685639[177] = 0;
   out_1390635145567685639[178] = 0;
   out_1390635145567685639[179] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]);
   out_1390635145567685639[180] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[19] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[18] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1390635145567685639[181] = 0;
   out_1390635145567685639[182] = 0;
   out_1390635145567685639[183] = 0;
   out_1390635145567685639[184] = 1;
   out_1390635145567685639[185] = 0;
   out_1390635145567685639[186] = 0;
   out_1390635145567685639[187] = 0;
   out_1390635145567685639[188] = 0;
   out_1390635145567685639[189] = 0;
   out_1390635145567685639[190] = 0;
   out_1390635145567685639[191] = 0;
   out_1390635145567685639[192] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1390635145567685639[193] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1390635145567685639[194] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1390635145567685639[195] = 0;
   out_1390635145567685639[196] = 0;
   out_1390635145567685639[197] = 0;
   out_1390635145567685639[198] = 0;
   out_1390635145567685639[199] = 0;
   out_1390635145567685639[200] = 0;
   out_1390635145567685639[201] = 0;
   out_1390635145567685639[202] = 0;
   out_1390635145567685639[203] = 0;
   out_1390635145567685639[204] = 0;
   out_1390635145567685639[205] = 0;
   out_1390635145567685639[206] = 0;
   out_1390635145567685639[207] = 1;
   out_1390635145567685639[208] = 0;
   out_1390635145567685639[209] = 0;
   out_1390635145567685639[210] = 0;
   out_1390635145567685639[211] = 0;
   out_1390635145567685639[212] = 0;
   out_1390635145567685639[213] = 0;
   out_1390635145567685639[214] = 0;
   out_1390635145567685639[215] = 0;
   out_1390635145567685639[216] = 0;
   out_1390635145567685639[217] = 0;
   out_1390635145567685639[218] = 0;
   out_1390635145567685639[219] = 0;
   out_1390635145567685639[220] = 0;
   out_1390635145567685639[221] = 0;
   out_1390635145567685639[222] = 0;
   out_1390635145567685639[223] = 0;
   out_1390635145567685639[224] = 0;
   out_1390635145567685639[225] = 0;
   out_1390635145567685639[226] = 0;
   out_1390635145567685639[227] = 0;
   out_1390635145567685639[228] = 0;
   out_1390635145567685639[229] = 0;
   out_1390635145567685639[230] = 1;
   out_1390635145567685639[231] = 0;
   out_1390635145567685639[232] = 0;
   out_1390635145567685639[233] = 0;
   out_1390635145567685639[234] = 0;
   out_1390635145567685639[235] = 0;
   out_1390635145567685639[236] = 0;
   out_1390635145567685639[237] = 0;
   out_1390635145567685639[238] = 0;
   out_1390635145567685639[239] = 0;
   out_1390635145567685639[240] = 0;
   out_1390635145567685639[241] = 0;
   out_1390635145567685639[242] = 0;
   out_1390635145567685639[243] = 0;
   out_1390635145567685639[244] = 0;
   out_1390635145567685639[245] = 0;
   out_1390635145567685639[246] = 0;
   out_1390635145567685639[247] = 0;
   out_1390635145567685639[248] = 0;
   out_1390635145567685639[249] = 0;
   out_1390635145567685639[250] = 0;
   out_1390635145567685639[251] = 0;
   out_1390635145567685639[252] = 0;
   out_1390635145567685639[253] = 1;
   out_1390635145567685639[254] = 0;
   out_1390635145567685639[255] = 0;
   out_1390635145567685639[256] = 0;
   out_1390635145567685639[257] = 0;
   out_1390635145567685639[258] = 0;
   out_1390635145567685639[259] = 0;
   out_1390635145567685639[260] = 0;
   out_1390635145567685639[261] = 0;
   out_1390635145567685639[262] = 0;
   out_1390635145567685639[263] = 0;
   out_1390635145567685639[264] = 0;
   out_1390635145567685639[265] = 0;
   out_1390635145567685639[266] = 0;
   out_1390635145567685639[267] = 0;
   out_1390635145567685639[268] = 0;
   out_1390635145567685639[269] = 0;
   out_1390635145567685639[270] = 0;
   out_1390635145567685639[271] = 0;
   out_1390635145567685639[272] = 0;
   out_1390635145567685639[273] = 0;
   out_1390635145567685639[274] = 0;
   out_1390635145567685639[275] = 0;
   out_1390635145567685639[276] = 1;
   out_1390635145567685639[277] = 0;
   out_1390635145567685639[278] = 0;
   out_1390635145567685639[279] = 0;
   out_1390635145567685639[280] = 0;
   out_1390635145567685639[281] = 0;
   out_1390635145567685639[282] = 0;
   out_1390635145567685639[283] = 0;
   out_1390635145567685639[284] = 0;
   out_1390635145567685639[285] = 0;
   out_1390635145567685639[286] = 0;
   out_1390635145567685639[287] = 0;
   out_1390635145567685639[288] = 0;
   out_1390635145567685639[289] = 0;
   out_1390635145567685639[290] = 0;
   out_1390635145567685639[291] = 0;
   out_1390635145567685639[292] = 0;
   out_1390635145567685639[293] = 0;
   out_1390635145567685639[294] = 0;
   out_1390635145567685639[295] = 0;
   out_1390635145567685639[296] = 0;
   out_1390635145567685639[297] = 0;
   out_1390635145567685639[298] = 0;
   out_1390635145567685639[299] = 1;
   out_1390635145567685639[300] = 0;
   out_1390635145567685639[301] = 0;
   out_1390635145567685639[302] = 0;
   out_1390635145567685639[303] = 0;
   out_1390635145567685639[304] = 0;
   out_1390635145567685639[305] = 0;
   out_1390635145567685639[306] = 0;
   out_1390635145567685639[307] = 0;
   out_1390635145567685639[308] = 0;
   out_1390635145567685639[309] = 0;
   out_1390635145567685639[310] = 0;
   out_1390635145567685639[311] = 0;
   out_1390635145567685639[312] = 0;
   out_1390635145567685639[313] = 0;
   out_1390635145567685639[314] = 0;
   out_1390635145567685639[315] = 0;
   out_1390635145567685639[316] = 0;
   out_1390635145567685639[317] = 0;
   out_1390635145567685639[318] = 0;
   out_1390635145567685639[319] = 0;
   out_1390635145567685639[320] = 0;
   out_1390635145567685639[321] = 0;
   out_1390635145567685639[322] = 1;
   out_1390635145567685639[323] = 0;
   out_1390635145567685639[324] = 0;
   out_1390635145567685639[325] = 0;
   out_1390635145567685639[326] = 0;
   out_1390635145567685639[327] = 0;
   out_1390635145567685639[328] = 0;
   out_1390635145567685639[329] = 0;
   out_1390635145567685639[330] = 0;
   out_1390635145567685639[331] = 0;
   out_1390635145567685639[332] = 0;
   out_1390635145567685639[333] = 0;
   out_1390635145567685639[334] = 0;
   out_1390635145567685639[335] = 0;
   out_1390635145567685639[336] = 0;
   out_1390635145567685639[337] = 0;
   out_1390635145567685639[338] = 0;
   out_1390635145567685639[339] = 0;
   out_1390635145567685639[340] = 0;
   out_1390635145567685639[341] = 0;
   out_1390635145567685639[342] = 0;
   out_1390635145567685639[343] = 0;
   out_1390635145567685639[344] = 0;
   out_1390635145567685639[345] = 1;
   out_1390635145567685639[346] = 0;
   out_1390635145567685639[347] = 0;
   out_1390635145567685639[348] = 0;
   out_1390635145567685639[349] = 0;
   out_1390635145567685639[350] = 0;
   out_1390635145567685639[351] = 0;
   out_1390635145567685639[352] = 0;
   out_1390635145567685639[353] = 0;
   out_1390635145567685639[354] = 0;
   out_1390635145567685639[355] = 0;
   out_1390635145567685639[356] = 0;
   out_1390635145567685639[357] = 0;
   out_1390635145567685639[358] = 0;
   out_1390635145567685639[359] = 0;
   out_1390635145567685639[360] = 0;
   out_1390635145567685639[361] = 0;
   out_1390635145567685639[362] = 0;
   out_1390635145567685639[363] = 0;
   out_1390635145567685639[364] = 0;
   out_1390635145567685639[365] = 0;
   out_1390635145567685639[366] = 0;
   out_1390635145567685639[367] = 0;
   out_1390635145567685639[368] = 1;
   out_1390635145567685639[369] = 0;
   out_1390635145567685639[370] = 0;
   out_1390635145567685639[371] = 0;
   out_1390635145567685639[372] = 0;
   out_1390635145567685639[373] = 0;
   out_1390635145567685639[374] = 0;
   out_1390635145567685639[375] = 0;
   out_1390635145567685639[376] = 0;
   out_1390635145567685639[377] = 0;
   out_1390635145567685639[378] = 0;
   out_1390635145567685639[379] = 0;
   out_1390635145567685639[380] = 0;
   out_1390635145567685639[381] = 0;
   out_1390635145567685639[382] = 0;
   out_1390635145567685639[383] = 0;
   out_1390635145567685639[384] = 0;
   out_1390635145567685639[385] = 0;
   out_1390635145567685639[386] = 0;
   out_1390635145567685639[387] = 0;
   out_1390635145567685639[388] = 0;
   out_1390635145567685639[389] = 0;
   out_1390635145567685639[390] = 0;
   out_1390635145567685639[391] = 1;
   out_1390635145567685639[392] = 0;
   out_1390635145567685639[393] = 0;
   out_1390635145567685639[394] = 0;
   out_1390635145567685639[395] = 0;
   out_1390635145567685639[396] = 0;
   out_1390635145567685639[397] = 0;
   out_1390635145567685639[398] = 0;
   out_1390635145567685639[399] = 0;
   out_1390635145567685639[400] = 0;
   out_1390635145567685639[401] = 0;
   out_1390635145567685639[402] = 0;
   out_1390635145567685639[403] = 0;
   out_1390635145567685639[404] = 0;
   out_1390635145567685639[405] = 0;
   out_1390635145567685639[406] = 0;
   out_1390635145567685639[407] = 0;
   out_1390635145567685639[408] = 0;
   out_1390635145567685639[409] = 0;
   out_1390635145567685639[410] = 0;
   out_1390635145567685639[411] = 0;
   out_1390635145567685639[412] = 0;
   out_1390635145567685639[413] = 0;
   out_1390635145567685639[414] = 1;
   out_1390635145567685639[415] = 0;
   out_1390635145567685639[416] = 0;
   out_1390635145567685639[417] = 0;
   out_1390635145567685639[418] = 0;
   out_1390635145567685639[419] = 0;
   out_1390635145567685639[420] = 0;
   out_1390635145567685639[421] = 0;
   out_1390635145567685639[422] = 0;
   out_1390635145567685639[423] = 0;
   out_1390635145567685639[424] = 0;
   out_1390635145567685639[425] = 0;
   out_1390635145567685639[426] = 0;
   out_1390635145567685639[427] = 0;
   out_1390635145567685639[428] = 0;
   out_1390635145567685639[429] = 0;
   out_1390635145567685639[430] = 0;
   out_1390635145567685639[431] = 0;
   out_1390635145567685639[432] = 0;
   out_1390635145567685639[433] = 0;
   out_1390635145567685639[434] = 0;
   out_1390635145567685639[435] = 0;
   out_1390635145567685639[436] = 0;
   out_1390635145567685639[437] = 1;
   out_1390635145567685639[438] = 0;
   out_1390635145567685639[439] = 0;
   out_1390635145567685639[440] = 0;
   out_1390635145567685639[441] = 0;
   out_1390635145567685639[442] = 0;
   out_1390635145567685639[443] = 0;
   out_1390635145567685639[444] = 0;
   out_1390635145567685639[445] = 0;
   out_1390635145567685639[446] = 0;
   out_1390635145567685639[447] = 0;
   out_1390635145567685639[448] = 0;
   out_1390635145567685639[449] = 0;
   out_1390635145567685639[450] = 0;
   out_1390635145567685639[451] = 0;
   out_1390635145567685639[452] = 0;
   out_1390635145567685639[453] = 0;
   out_1390635145567685639[454] = 0;
   out_1390635145567685639[455] = 0;
   out_1390635145567685639[456] = 0;
   out_1390635145567685639[457] = 0;
   out_1390635145567685639[458] = 0;
   out_1390635145567685639[459] = 0;
   out_1390635145567685639[460] = 1;
   out_1390635145567685639[461] = 0;
   out_1390635145567685639[462] = 0;
   out_1390635145567685639[463] = 0;
   out_1390635145567685639[464] = 0;
   out_1390635145567685639[465] = 0;
   out_1390635145567685639[466] = 0;
   out_1390635145567685639[467] = 0;
   out_1390635145567685639[468] = 0;
   out_1390635145567685639[469] = 0;
   out_1390635145567685639[470] = 0;
   out_1390635145567685639[471] = 0;
   out_1390635145567685639[472] = 0;
   out_1390635145567685639[473] = 0;
   out_1390635145567685639[474] = 0;
   out_1390635145567685639[475] = 0;
   out_1390635145567685639[476] = 0;
   out_1390635145567685639[477] = 0;
   out_1390635145567685639[478] = 0;
   out_1390635145567685639[479] = 0;
   out_1390635145567685639[480] = 0;
   out_1390635145567685639[481] = 0;
   out_1390635145567685639[482] = 0;
   out_1390635145567685639[483] = 1;
}
void h_3(double *state, double *unused, double *out_8778689902229900358) {
   out_8778689902229900358[0] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7)*state[16];
}
void H_3(double *state, double *unused, double *out_7071063248221903837) {
   out_7071063248221903837[0] = 0;
   out_7071063248221903837[1] = 0;
   out_7071063248221903837[2] = 0;
   out_7071063248221903837[3] = 0;
   out_7071063248221903837[4] = 0;
   out_7071063248221903837[5] = 0;
   out_7071063248221903837[6] = 0;
   out_7071063248221903837[7] = state[7]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_7071063248221903837[8] = state[8]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_7071063248221903837[9] = state[9]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_7071063248221903837[10] = 0;
   out_7071063248221903837[11] = 0;
   out_7071063248221903837[12] = 0;
   out_7071063248221903837[13] = 0;
   out_7071063248221903837[14] = 0;
   out_7071063248221903837[15] = 0;
   out_7071063248221903837[16] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_7071063248221903837[17] = 0;
   out_7071063248221903837[18] = 0;
   out_7071063248221903837[19] = 0;
   out_7071063248221903837[20] = 0;
   out_7071063248221903837[21] = 0;
   out_7071063248221903837[22] = 0;
}
void h_4(double *state, double *unused, double *out_7412584150661195934) {
   out_7412584150661195934[0] = state[10] + state[13];
   out_7412584150661195934[1] = state[11] + state[14];
   out_7412584150661195934[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8513600165493837225) {
   out_8513600165493837225[0] = 0;
   out_8513600165493837225[1] = 0;
   out_8513600165493837225[2] = 0;
   out_8513600165493837225[3] = 0;
   out_8513600165493837225[4] = 0;
   out_8513600165493837225[5] = 0;
   out_8513600165493837225[6] = 0;
   out_8513600165493837225[7] = 0;
   out_8513600165493837225[8] = 0;
   out_8513600165493837225[9] = 0;
   out_8513600165493837225[10] = 1;
   out_8513600165493837225[11] = 0;
   out_8513600165493837225[12] = 0;
   out_8513600165493837225[13] = 1;
   out_8513600165493837225[14] = 0;
   out_8513600165493837225[15] = 0;
   out_8513600165493837225[16] = 0;
   out_8513600165493837225[17] = 0;
   out_8513600165493837225[18] = 0;
   out_8513600165493837225[19] = 0;
   out_8513600165493837225[20] = 0;
   out_8513600165493837225[21] = 0;
   out_8513600165493837225[22] = 0;
   out_8513600165493837225[23] = 0;
   out_8513600165493837225[24] = 0;
   out_8513600165493837225[25] = 0;
   out_8513600165493837225[26] = 0;
   out_8513600165493837225[27] = 0;
   out_8513600165493837225[28] = 0;
   out_8513600165493837225[29] = 0;
   out_8513600165493837225[30] = 0;
   out_8513600165493837225[31] = 0;
   out_8513600165493837225[32] = 0;
   out_8513600165493837225[33] = 0;
   out_8513600165493837225[34] = 1;
   out_8513600165493837225[35] = 0;
   out_8513600165493837225[36] = 0;
   out_8513600165493837225[37] = 1;
   out_8513600165493837225[38] = 0;
   out_8513600165493837225[39] = 0;
   out_8513600165493837225[40] = 0;
   out_8513600165493837225[41] = 0;
   out_8513600165493837225[42] = 0;
   out_8513600165493837225[43] = 0;
   out_8513600165493837225[44] = 0;
   out_8513600165493837225[45] = 0;
   out_8513600165493837225[46] = 0;
   out_8513600165493837225[47] = 0;
   out_8513600165493837225[48] = 0;
   out_8513600165493837225[49] = 0;
   out_8513600165493837225[50] = 0;
   out_8513600165493837225[51] = 0;
   out_8513600165493837225[52] = 0;
   out_8513600165493837225[53] = 0;
   out_8513600165493837225[54] = 0;
   out_8513600165493837225[55] = 0;
   out_8513600165493837225[56] = 0;
   out_8513600165493837225[57] = 0;
   out_8513600165493837225[58] = 1;
   out_8513600165493837225[59] = 0;
   out_8513600165493837225[60] = 0;
   out_8513600165493837225[61] = 1;
   out_8513600165493837225[62] = 0;
   out_8513600165493837225[63] = 0;
   out_8513600165493837225[64] = 0;
   out_8513600165493837225[65] = 0;
   out_8513600165493837225[66] = 0;
   out_8513600165493837225[67] = 0;
   out_8513600165493837225[68] = 0;
}
void h_9(double *state, double *unused, double *out_2165147619284547662) {
   out_2165147619284547662[0] = state[10];
   out_2165147619284547662[1] = state[11];
   out_2165147619284547662[2] = state[12];
}
void H_9(double *state, double *unused, double *out_854934667011875570) {
   out_854934667011875570[0] = 0;
   out_854934667011875570[1] = 0;
   out_854934667011875570[2] = 0;
   out_854934667011875570[3] = 0;
   out_854934667011875570[4] = 0;
   out_854934667011875570[5] = 0;
   out_854934667011875570[6] = 0;
   out_854934667011875570[7] = 0;
   out_854934667011875570[8] = 0;
   out_854934667011875570[9] = 0;
   out_854934667011875570[10] = 1;
   out_854934667011875570[11] = 0;
   out_854934667011875570[12] = 0;
   out_854934667011875570[13] = 0;
   out_854934667011875570[14] = 0;
   out_854934667011875570[15] = 0;
   out_854934667011875570[16] = 0;
   out_854934667011875570[17] = 0;
   out_854934667011875570[18] = 0;
   out_854934667011875570[19] = 0;
   out_854934667011875570[20] = 0;
   out_854934667011875570[21] = 0;
   out_854934667011875570[22] = 0;
   out_854934667011875570[23] = 0;
   out_854934667011875570[24] = 0;
   out_854934667011875570[25] = 0;
   out_854934667011875570[26] = 0;
   out_854934667011875570[27] = 0;
   out_854934667011875570[28] = 0;
   out_854934667011875570[29] = 0;
   out_854934667011875570[30] = 0;
   out_854934667011875570[31] = 0;
   out_854934667011875570[32] = 0;
   out_854934667011875570[33] = 0;
   out_854934667011875570[34] = 1;
   out_854934667011875570[35] = 0;
   out_854934667011875570[36] = 0;
   out_854934667011875570[37] = 0;
   out_854934667011875570[38] = 0;
   out_854934667011875570[39] = 0;
   out_854934667011875570[40] = 0;
   out_854934667011875570[41] = 0;
   out_854934667011875570[42] = 0;
   out_854934667011875570[43] = 0;
   out_854934667011875570[44] = 0;
   out_854934667011875570[45] = 0;
   out_854934667011875570[46] = 0;
   out_854934667011875570[47] = 0;
   out_854934667011875570[48] = 0;
   out_854934667011875570[49] = 0;
   out_854934667011875570[50] = 0;
   out_854934667011875570[51] = 0;
   out_854934667011875570[52] = 0;
   out_854934667011875570[53] = 0;
   out_854934667011875570[54] = 0;
   out_854934667011875570[55] = 0;
   out_854934667011875570[56] = 0;
   out_854934667011875570[57] = 0;
   out_854934667011875570[58] = 1;
   out_854934667011875570[59] = 0;
   out_854934667011875570[60] = 0;
   out_854934667011875570[61] = 0;
   out_854934667011875570[62] = 0;
   out_854934667011875570[63] = 0;
   out_854934667011875570[64] = 0;
   out_854934667011875570[65] = 0;
   out_854934667011875570[66] = 0;
   out_854934667011875570[67] = 0;
   out_854934667011875570[68] = 0;
}
void h_10(double *state, double *unused, double *out_6437534819363874302) {
   out_6437534819363874302[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[17];
   out_6437534819363874302[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[18];
   out_6437534819363874302[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[19];
}
void H_10(double *state, double *unused, double *out_4283058499254228570) {
   out_4283058499254228570[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4283058499254228570[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4283058499254228570[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4283058499254228570[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4283058499254228570[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4283058499254228570[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4283058499254228570[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4283058499254228570[7] = 0;
   out_4283058499254228570[8] = 0;
   out_4283058499254228570[9] = 0;
   out_4283058499254228570[10] = 0;
   out_4283058499254228570[11] = 0;
   out_4283058499254228570[12] = 0;
   out_4283058499254228570[13] = 0;
   out_4283058499254228570[14] = 0;
   out_4283058499254228570[15] = 0;
   out_4283058499254228570[16] = 0;
   out_4283058499254228570[17] = 1;
   out_4283058499254228570[18] = 0;
   out_4283058499254228570[19] = 0;
   out_4283058499254228570[20] = 0;
   out_4283058499254228570[21] = 0;
   out_4283058499254228570[22] = 0;
   out_4283058499254228570[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4283058499254228570[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4283058499254228570[25] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4283058499254228570[26] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4283058499254228570[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4283058499254228570[28] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4283058499254228570[29] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4283058499254228570[30] = 0;
   out_4283058499254228570[31] = 0;
   out_4283058499254228570[32] = 0;
   out_4283058499254228570[33] = 0;
   out_4283058499254228570[34] = 0;
   out_4283058499254228570[35] = 0;
   out_4283058499254228570[36] = 0;
   out_4283058499254228570[37] = 0;
   out_4283058499254228570[38] = 0;
   out_4283058499254228570[39] = 0;
   out_4283058499254228570[40] = 0;
   out_4283058499254228570[41] = 1;
   out_4283058499254228570[42] = 0;
   out_4283058499254228570[43] = 0;
   out_4283058499254228570[44] = 0;
   out_4283058499254228570[45] = 0;
   out_4283058499254228570[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4283058499254228570[47] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4283058499254228570[48] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4283058499254228570[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4283058499254228570[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4283058499254228570[51] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4283058499254228570[52] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4283058499254228570[53] = 0;
   out_4283058499254228570[54] = 0;
   out_4283058499254228570[55] = 0;
   out_4283058499254228570[56] = 0;
   out_4283058499254228570[57] = 0;
   out_4283058499254228570[58] = 0;
   out_4283058499254228570[59] = 0;
   out_4283058499254228570[60] = 0;
   out_4283058499254228570[61] = 0;
   out_4283058499254228570[62] = 0;
   out_4283058499254228570[63] = 0;
   out_4283058499254228570[64] = 0;
   out_4283058499254228570[65] = 1;
   out_4283058499254228570[66] = 0;
   out_4283058499254228570[67] = 0;
   out_4283058499254228570[68] = 0;
}
void h_12(double *state, double *unused, double *out_294143016965715036) {
   out_294143016965715036[0] = state[0];
   out_294143016965715036[1] = state[1];
   out_294143016965715036[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6407044653754627656) {
   out_6407044653754627656[0] = 1;
   out_6407044653754627656[1] = 0;
   out_6407044653754627656[2] = 0;
   out_6407044653754627656[3] = 0;
   out_6407044653754627656[4] = 0;
   out_6407044653754627656[5] = 0;
   out_6407044653754627656[6] = 0;
   out_6407044653754627656[7] = 0;
   out_6407044653754627656[8] = 0;
   out_6407044653754627656[9] = 0;
   out_6407044653754627656[10] = 0;
   out_6407044653754627656[11] = 0;
   out_6407044653754627656[12] = 0;
   out_6407044653754627656[13] = 0;
   out_6407044653754627656[14] = 0;
   out_6407044653754627656[15] = 0;
   out_6407044653754627656[16] = 0;
   out_6407044653754627656[17] = 0;
   out_6407044653754627656[18] = 0;
   out_6407044653754627656[19] = 0;
   out_6407044653754627656[20] = 0;
   out_6407044653754627656[21] = 0;
   out_6407044653754627656[22] = 0;
   out_6407044653754627656[23] = 0;
   out_6407044653754627656[24] = 1;
   out_6407044653754627656[25] = 0;
   out_6407044653754627656[26] = 0;
   out_6407044653754627656[27] = 0;
   out_6407044653754627656[28] = 0;
   out_6407044653754627656[29] = 0;
   out_6407044653754627656[30] = 0;
   out_6407044653754627656[31] = 0;
   out_6407044653754627656[32] = 0;
   out_6407044653754627656[33] = 0;
   out_6407044653754627656[34] = 0;
   out_6407044653754627656[35] = 0;
   out_6407044653754627656[36] = 0;
   out_6407044653754627656[37] = 0;
   out_6407044653754627656[38] = 0;
   out_6407044653754627656[39] = 0;
   out_6407044653754627656[40] = 0;
   out_6407044653754627656[41] = 0;
   out_6407044653754627656[42] = 0;
   out_6407044653754627656[43] = 0;
   out_6407044653754627656[44] = 0;
   out_6407044653754627656[45] = 0;
   out_6407044653754627656[46] = 0;
   out_6407044653754627656[47] = 0;
   out_6407044653754627656[48] = 1;
   out_6407044653754627656[49] = 0;
   out_6407044653754627656[50] = 0;
   out_6407044653754627656[51] = 0;
   out_6407044653754627656[52] = 0;
   out_6407044653754627656[53] = 0;
   out_6407044653754627656[54] = 0;
   out_6407044653754627656[55] = 0;
   out_6407044653754627656[56] = 0;
   out_6407044653754627656[57] = 0;
   out_6407044653754627656[58] = 0;
   out_6407044653754627656[59] = 0;
   out_6407044653754627656[60] = 0;
   out_6407044653754627656[61] = 0;
   out_6407044653754627656[62] = 0;
   out_6407044653754627656[63] = 0;
   out_6407044653754627656[64] = 0;
   out_6407044653754627656[65] = 0;
   out_6407044653754627656[66] = 0;
   out_6407044653754627656[67] = 0;
   out_6407044653754627656[68] = 0;
}
void h_31(double *state, double *unused, double *out_2742120223357459888) {
   out_2742120223357459888[0] = state[7];
   out_2742120223357459888[1] = state[8];
   out_2742120223357459888[2] = state[9];
}
void H_31(double *state, double *unused, double *out_9082134428898047477) {
   out_9082134428898047477[0] = 0;
   out_9082134428898047477[1] = 0;
   out_9082134428898047477[2] = 0;
   out_9082134428898047477[3] = 0;
   out_9082134428898047477[4] = 0;
   out_9082134428898047477[5] = 0;
   out_9082134428898047477[6] = 0;
   out_9082134428898047477[7] = 1;
   out_9082134428898047477[8] = 0;
   out_9082134428898047477[9] = 0;
   out_9082134428898047477[10] = 0;
   out_9082134428898047477[11] = 0;
   out_9082134428898047477[12] = 0;
   out_9082134428898047477[13] = 0;
   out_9082134428898047477[14] = 0;
   out_9082134428898047477[15] = 0;
   out_9082134428898047477[16] = 0;
   out_9082134428898047477[17] = 0;
   out_9082134428898047477[18] = 0;
   out_9082134428898047477[19] = 0;
   out_9082134428898047477[20] = 0;
   out_9082134428898047477[21] = 0;
   out_9082134428898047477[22] = 0;
   out_9082134428898047477[23] = 0;
   out_9082134428898047477[24] = 0;
   out_9082134428898047477[25] = 0;
   out_9082134428898047477[26] = 0;
   out_9082134428898047477[27] = 0;
   out_9082134428898047477[28] = 0;
   out_9082134428898047477[29] = 0;
   out_9082134428898047477[30] = 0;
   out_9082134428898047477[31] = 1;
   out_9082134428898047477[32] = 0;
   out_9082134428898047477[33] = 0;
   out_9082134428898047477[34] = 0;
   out_9082134428898047477[35] = 0;
   out_9082134428898047477[36] = 0;
   out_9082134428898047477[37] = 0;
   out_9082134428898047477[38] = 0;
   out_9082134428898047477[39] = 0;
   out_9082134428898047477[40] = 0;
   out_9082134428898047477[41] = 0;
   out_9082134428898047477[42] = 0;
   out_9082134428898047477[43] = 0;
   out_9082134428898047477[44] = 0;
   out_9082134428898047477[45] = 0;
   out_9082134428898047477[46] = 0;
   out_9082134428898047477[47] = 0;
   out_9082134428898047477[48] = 0;
   out_9082134428898047477[49] = 0;
   out_9082134428898047477[50] = 0;
   out_9082134428898047477[51] = 0;
   out_9082134428898047477[52] = 0;
   out_9082134428898047477[53] = 0;
   out_9082134428898047477[54] = 0;
   out_9082134428898047477[55] = 1;
   out_9082134428898047477[56] = 0;
   out_9082134428898047477[57] = 0;
   out_9082134428898047477[58] = 0;
   out_9082134428898047477[59] = 0;
   out_9082134428898047477[60] = 0;
   out_9082134428898047477[61] = 0;
   out_9082134428898047477[62] = 0;
   out_9082134428898047477[63] = 0;
   out_9082134428898047477[64] = 0;
   out_9082134428898047477[65] = 0;
   out_9082134428898047477[66] = 0;
   out_9082134428898047477[67] = 0;
   out_9082134428898047477[68] = 0;
}
void h_32(double *state, double *unused, double *out_2553674345415990180) {
   out_2553674345415990180[0] = state[3];
   out_2553674345415990180[1] = state[4];
   out_2553674345415990180[2] = state[5];
   out_2553674345415990180[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1683532725355929790) {
   out_1683532725355929790[0] = 0;
   out_1683532725355929790[1] = 0;
   out_1683532725355929790[2] = 0;
   out_1683532725355929790[3] = 1;
   out_1683532725355929790[4] = 0;
   out_1683532725355929790[5] = 0;
   out_1683532725355929790[6] = 0;
   out_1683532725355929790[7] = 0;
   out_1683532725355929790[8] = 0;
   out_1683532725355929790[9] = 0;
   out_1683532725355929790[10] = 0;
   out_1683532725355929790[11] = 0;
   out_1683532725355929790[12] = 0;
   out_1683532725355929790[13] = 0;
   out_1683532725355929790[14] = 0;
   out_1683532725355929790[15] = 0;
   out_1683532725355929790[16] = 0;
   out_1683532725355929790[17] = 0;
   out_1683532725355929790[18] = 0;
   out_1683532725355929790[19] = 0;
   out_1683532725355929790[20] = 0;
   out_1683532725355929790[21] = 0;
   out_1683532725355929790[22] = 0;
   out_1683532725355929790[23] = 0;
   out_1683532725355929790[24] = 0;
   out_1683532725355929790[25] = 0;
   out_1683532725355929790[26] = 0;
   out_1683532725355929790[27] = 1;
   out_1683532725355929790[28] = 0;
   out_1683532725355929790[29] = 0;
   out_1683532725355929790[30] = 0;
   out_1683532725355929790[31] = 0;
   out_1683532725355929790[32] = 0;
   out_1683532725355929790[33] = 0;
   out_1683532725355929790[34] = 0;
   out_1683532725355929790[35] = 0;
   out_1683532725355929790[36] = 0;
   out_1683532725355929790[37] = 0;
   out_1683532725355929790[38] = 0;
   out_1683532725355929790[39] = 0;
   out_1683532725355929790[40] = 0;
   out_1683532725355929790[41] = 0;
   out_1683532725355929790[42] = 0;
   out_1683532725355929790[43] = 0;
   out_1683532725355929790[44] = 0;
   out_1683532725355929790[45] = 0;
   out_1683532725355929790[46] = 0;
   out_1683532725355929790[47] = 0;
   out_1683532725355929790[48] = 0;
   out_1683532725355929790[49] = 0;
   out_1683532725355929790[50] = 0;
   out_1683532725355929790[51] = 1;
   out_1683532725355929790[52] = 0;
   out_1683532725355929790[53] = 0;
   out_1683532725355929790[54] = 0;
   out_1683532725355929790[55] = 0;
   out_1683532725355929790[56] = 0;
   out_1683532725355929790[57] = 0;
   out_1683532725355929790[58] = 0;
   out_1683532725355929790[59] = 0;
   out_1683532725355929790[60] = 0;
   out_1683532725355929790[61] = 0;
   out_1683532725355929790[62] = 0;
   out_1683532725355929790[63] = 0;
   out_1683532725355929790[64] = 0;
   out_1683532725355929790[65] = 0;
   out_1683532725355929790[66] = 0;
   out_1683532725355929790[67] = 0;
   out_1683532725355929790[68] = 0;
   out_1683532725355929790[69] = 0;
   out_1683532725355929790[70] = 0;
   out_1683532725355929790[71] = 0;
   out_1683532725355929790[72] = 0;
   out_1683532725355929790[73] = 0;
   out_1683532725355929790[74] = 0;
   out_1683532725355929790[75] = 1;
   out_1683532725355929790[76] = 0;
   out_1683532725355929790[77] = 0;
   out_1683532725355929790[78] = 0;
   out_1683532725355929790[79] = 0;
   out_1683532725355929790[80] = 0;
   out_1683532725355929790[81] = 0;
   out_1683532725355929790[82] = 0;
   out_1683532725355929790[83] = 0;
   out_1683532725355929790[84] = 0;
   out_1683532725355929790[85] = 0;
   out_1683532725355929790[86] = 0;
   out_1683532725355929790[87] = 0;
   out_1683532725355929790[88] = 0;
   out_1683532725355929790[89] = 0;
   out_1683532725355929790[90] = 0;
   out_1683532725355929790[91] = 0;
}
void h_13(double *state, double *unused, double *out_2051282062101304248) {
   out_2051282062101304248[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2051282062101304248[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2051282062101304248[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6082984043611976909) {
   out_6082984043611976909[0] = 0;
   out_6082984043611976909[1] = 0;
   out_6082984043611976909[2] = 0;
   out_6082984043611976909[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6082984043611976909[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6082984043611976909[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6082984043611976909[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6082984043611976909[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6082984043611976909[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6082984043611976909[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6082984043611976909[10] = 0;
   out_6082984043611976909[11] = 0;
   out_6082984043611976909[12] = 0;
   out_6082984043611976909[13] = 0;
   out_6082984043611976909[14] = 0;
   out_6082984043611976909[15] = 0;
   out_6082984043611976909[16] = 0;
   out_6082984043611976909[17] = 0;
   out_6082984043611976909[18] = 0;
   out_6082984043611976909[19] = 0;
   out_6082984043611976909[20] = 0;
   out_6082984043611976909[21] = 0;
   out_6082984043611976909[22] = 0;
   out_6082984043611976909[23] = 0;
   out_6082984043611976909[24] = 0;
   out_6082984043611976909[25] = 0;
   out_6082984043611976909[26] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6082984043611976909[27] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6082984043611976909[28] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6082984043611976909[29] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6082984043611976909[30] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6082984043611976909[31] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6082984043611976909[32] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6082984043611976909[33] = 0;
   out_6082984043611976909[34] = 0;
   out_6082984043611976909[35] = 0;
   out_6082984043611976909[36] = 0;
   out_6082984043611976909[37] = 0;
   out_6082984043611976909[38] = 0;
   out_6082984043611976909[39] = 0;
   out_6082984043611976909[40] = 0;
   out_6082984043611976909[41] = 0;
   out_6082984043611976909[42] = 0;
   out_6082984043611976909[43] = 0;
   out_6082984043611976909[44] = 0;
   out_6082984043611976909[45] = 0;
   out_6082984043611976909[46] = 0;
   out_6082984043611976909[47] = 0;
   out_6082984043611976909[48] = 0;
   out_6082984043611976909[49] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6082984043611976909[50] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6082984043611976909[51] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6082984043611976909[52] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6082984043611976909[53] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6082984043611976909[54] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6082984043611976909[55] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6082984043611976909[56] = 0;
   out_6082984043611976909[57] = 0;
   out_6082984043611976909[58] = 0;
   out_6082984043611976909[59] = 0;
   out_6082984043611976909[60] = 0;
   out_6082984043611976909[61] = 0;
   out_6082984043611976909[62] = 0;
   out_6082984043611976909[63] = 0;
   out_6082984043611976909[64] = 0;
   out_6082984043611976909[65] = 0;
   out_6082984043611976909[66] = 0;
   out_6082984043611976909[67] = 0;
   out_6082984043611976909[68] = 0;
}
void h_14(double *state, double *unused, double *out_2165147619284547662) {
   out_2165147619284547662[0] = state[10];
   out_2165147619284547662[1] = state[11];
   out_2165147619284547662[2] = state[12];
}
void H_14(double *state, double *unused, double *out_854934667011875570) {
   out_854934667011875570[0] = 0;
   out_854934667011875570[1] = 0;
   out_854934667011875570[2] = 0;
   out_854934667011875570[3] = 0;
   out_854934667011875570[4] = 0;
   out_854934667011875570[5] = 0;
   out_854934667011875570[6] = 0;
   out_854934667011875570[7] = 0;
   out_854934667011875570[8] = 0;
   out_854934667011875570[9] = 0;
   out_854934667011875570[10] = 1;
   out_854934667011875570[11] = 0;
   out_854934667011875570[12] = 0;
   out_854934667011875570[13] = 0;
   out_854934667011875570[14] = 0;
   out_854934667011875570[15] = 0;
   out_854934667011875570[16] = 0;
   out_854934667011875570[17] = 0;
   out_854934667011875570[18] = 0;
   out_854934667011875570[19] = 0;
   out_854934667011875570[20] = 0;
   out_854934667011875570[21] = 0;
   out_854934667011875570[22] = 0;
   out_854934667011875570[23] = 0;
   out_854934667011875570[24] = 0;
   out_854934667011875570[25] = 0;
   out_854934667011875570[26] = 0;
   out_854934667011875570[27] = 0;
   out_854934667011875570[28] = 0;
   out_854934667011875570[29] = 0;
   out_854934667011875570[30] = 0;
   out_854934667011875570[31] = 0;
   out_854934667011875570[32] = 0;
   out_854934667011875570[33] = 0;
   out_854934667011875570[34] = 1;
   out_854934667011875570[35] = 0;
   out_854934667011875570[36] = 0;
   out_854934667011875570[37] = 0;
   out_854934667011875570[38] = 0;
   out_854934667011875570[39] = 0;
   out_854934667011875570[40] = 0;
   out_854934667011875570[41] = 0;
   out_854934667011875570[42] = 0;
   out_854934667011875570[43] = 0;
   out_854934667011875570[44] = 0;
   out_854934667011875570[45] = 0;
   out_854934667011875570[46] = 0;
   out_854934667011875570[47] = 0;
   out_854934667011875570[48] = 0;
   out_854934667011875570[49] = 0;
   out_854934667011875570[50] = 0;
   out_854934667011875570[51] = 0;
   out_854934667011875570[52] = 0;
   out_854934667011875570[53] = 0;
   out_854934667011875570[54] = 0;
   out_854934667011875570[55] = 0;
   out_854934667011875570[56] = 0;
   out_854934667011875570[57] = 0;
   out_854934667011875570[58] = 1;
   out_854934667011875570[59] = 0;
   out_854934667011875570[60] = 0;
   out_854934667011875570[61] = 0;
   out_854934667011875570[62] = 0;
   out_854934667011875570[63] = 0;
   out_854934667011875570[64] = 0;
   out_854934667011875570[65] = 0;
   out_854934667011875570[66] = 0;
   out_854934667011875570[67] = 0;
   out_854934667011875570[68] = 0;
}
void h_19(double *state, double *unused, double *out_2529107655439357541) {
   out_2529107655439357541[0] = state[20];
   out_2529107655439357541[1] = state[21];
   out_2529107655439357541[2] = state[22];
}
void H_19(double *state, double *unused, double *out_5287614518114306751) {
   out_5287614518114306751[0] = 0;
   out_5287614518114306751[1] = 0;
   out_5287614518114306751[2] = 0;
   out_5287614518114306751[3] = 0;
   out_5287614518114306751[4] = 0;
   out_5287614518114306751[5] = 0;
   out_5287614518114306751[6] = 0;
   out_5287614518114306751[7] = 0;
   out_5287614518114306751[8] = 0;
   out_5287614518114306751[9] = 0;
   out_5287614518114306751[10] = 0;
   out_5287614518114306751[11] = 0;
   out_5287614518114306751[12] = 0;
   out_5287614518114306751[13] = 0;
   out_5287614518114306751[14] = 0;
   out_5287614518114306751[15] = 0;
   out_5287614518114306751[16] = 0;
   out_5287614518114306751[17] = 0;
   out_5287614518114306751[18] = 0;
   out_5287614518114306751[19] = 0;
   out_5287614518114306751[20] = 1;
   out_5287614518114306751[21] = 0;
   out_5287614518114306751[22] = 0;
   out_5287614518114306751[23] = 0;
   out_5287614518114306751[24] = 0;
   out_5287614518114306751[25] = 0;
   out_5287614518114306751[26] = 0;
   out_5287614518114306751[27] = 0;
   out_5287614518114306751[28] = 0;
   out_5287614518114306751[29] = 0;
   out_5287614518114306751[30] = 0;
   out_5287614518114306751[31] = 0;
   out_5287614518114306751[32] = 0;
   out_5287614518114306751[33] = 0;
   out_5287614518114306751[34] = 0;
   out_5287614518114306751[35] = 0;
   out_5287614518114306751[36] = 0;
   out_5287614518114306751[37] = 0;
   out_5287614518114306751[38] = 0;
   out_5287614518114306751[39] = 0;
   out_5287614518114306751[40] = 0;
   out_5287614518114306751[41] = 0;
   out_5287614518114306751[42] = 0;
   out_5287614518114306751[43] = 0;
   out_5287614518114306751[44] = 1;
   out_5287614518114306751[45] = 0;
   out_5287614518114306751[46] = 0;
   out_5287614518114306751[47] = 0;
   out_5287614518114306751[48] = 0;
   out_5287614518114306751[49] = 0;
   out_5287614518114306751[50] = 0;
   out_5287614518114306751[51] = 0;
   out_5287614518114306751[52] = 0;
   out_5287614518114306751[53] = 0;
   out_5287614518114306751[54] = 0;
   out_5287614518114306751[55] = 0;
   out_5287614518114306751[56] = 0;
   out_5287614518114306751[57] = 0;
   out_5287614518114306751[58] = 0;
   out_5287614518114306751[59] = 0;
   out_5287614518114306751[60] = 0;
   out_5287614518114306751[61] = 0;
   out_5287614518114306751[62] = 0;
   out_5287614518114306751[63] = 0;
   out_5287614518114306751[64] = 0;
   out_5287614518114306751[65] = 0;
   out_5287614518114306751[66] = 0;
   out_5287614518114306751[67] = 0;
   out_5287614518114306751[68] = 1;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_3(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<1, 3, 0>(in_x, in_P, h_3, H_3, NULL, in_z, in_R, in_ea, MAHA_THRESH_3);
}
void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_19(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_19, H_19, NULL, in_z, in_R, in_ea, MAHA_THRESH_19);
}
void live_H(double *in_vec, double *out_3112248656344267024) {
  H(in_vec, out_3112248656344267024);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6514478479377154554) {
  err_fun(nom_x, delta_x, out_6514478479377154554);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6562831803697931829) {
  inv_err_fun(nom_x, true_x, out_6562831803697931829);
}
void live_H_mod_fun(double *state, double *out_3485285672998159801) {
  H_mod_fun(state, out_3485285672998159801);
}
void live_f_fun(double *state, double dt, double *out_2252742358831627050) {
  f_fun(state,  dt, out_2252742358831627050);
}
void live_F_fun(double *state, double dt, double *out_1390635145567685639) {
  F_fun(state,  dt, out_1390635145567685639);
}
void live_h_3(double *state, double *unused, double *out_8778689902229900358) {
  h_3(state, unused, out_8778689902229900358);
}
void live_H_3(double *state, double *unused, double *out_7071063248221903837) {
  H_3(state, unused, out_7071063248221903837);
}
void live_h_4(double *state, double *unused, double *out_7412584150661195934) {
  h_4(state, unused, out_7412584150661195934);
}
void live_H_4(double *state, double *unused, double *out_8513600165493837225) {
  H_4(state, unused, out_8513600165493837225);
}
void live_h_9(double *state, double *unused, double *out_2165147619284547662) {
  h_9(state, unused, out_2165147619284547662);
}
void live_H_9(double *state, double *unused, double *out_854934667011875570) {
  H_9(state, unused, out_854934667011875570);
}
void live_h_10(double *state, double *unused, double *out_6437534819363874302) {
  h_10(state, unused, out_6437534819363874302);
}
void live_H_10(double *state, double *unused, double *out_4283058499254228570) {
  H_10(state, unused, out_4283058499254228570);
}
void live_h_12(double *state, double *unused, double *out_294143016965715036) {
  h_12(state, unused, out_294143016965715036);
}
void live_H_12(double *state, double *unused, double *out_6407044653754627656) {
  H_12(state, unused, out_6407044653754627656);
}
void live_h_31(double *state, double *unused, double *out_2742120223357459888) {
  h_31(state, unused, out_2742120223357459888);
}
void live_H_31(double *state, double *unused, double *out_9082134428898047477) {
  H_31(state, unused, out_9082134428898047477);
}
void live_h_32(double *state, double *unused, double *out_2553674345415990180) {
  h_32(state, unused, out_2553674345415990180);
}
void live_H_32(double *state, double *unused, double *out_1683532725355929790) {
  H_32(state, unused, out_1683532725355929790);
}
void live_h_13(double *state, double *unused, double *out_2051282062101304248) {
  h_13(state, unused, out_2051282062101304248);
}
void live_H_13(double *state, double *unused, double *out_6082984043611976909) {
  H_13(state, unused, out_6082984043611976909);
}
void live_h_14(double *state, double *unused, double *out_2165147619284547662) {
  h_14(state, unused, out_2165147619284547662);
}
void live_H_14(double *state, double *unused, double *out_854934667011875570) {
  H_14(state, unused, out_854934667011875570);
}
void live_h_19(double *state, double *unused, double *out_2529107655439357541) {
  h_19(state, unused, out_2529107655439357541);
}
void live_H_19(double *state, double *unused, double *out_5287614518114306751) {
  H_19(state, unused, out_5287614518114306751);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 3, 4, 9, 10, 12, 31, 32, 13, 14, 19 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 3, live_h_3 },
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 19, live_h_19 },
  },
  .Hs = {
    { 3, live_H_3 },
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 19, live_H_19 },
  },
  .updates = {
    { 3, live_update_3 },
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 19, live_update_19 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
